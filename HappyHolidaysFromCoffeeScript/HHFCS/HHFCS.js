// Generated by CoffeeScript 1.4.0
var HHFCS;

HHFCS = (function() {
  var DURATION, NFLAKES, allResourcesLoaded, rnd;

  function HHFCS() {}

  HHFCS.init = function(ms) {
    var canvas, i, image, radius, _i, _j, _ref;
    canvas = document.createElement("canvas");
    canvas.setAttribute("width", 800);
    canvas.setAttribute("height", 528);
    document.getElementsByTagName("body")[0].appendChild(canvas);
    HHFCS.ctx = canvas.getContext("2d");
    HHFCS.ctx.font = "30px Arial";
    HHFCS.ctx.textAlign = "center";
    HHFCS.width = canvas.width;
    HHFCS.height = canvas.height;
    HHFCS.imgMessage = new Image;
    HHFCS.imgMessage.src = "images/message.png";
    HHFCS.imgScene = new Image;
    HHFCS.imgScene.src = "images/scene.png";
    HHFCS.imgWreath = new Array;
    for (i = _i = 0; _i <= 2; i = ++_i) {
      image = new Image;
      image.src = "images/wreath" + i + ".png";
      HHFCS.imgWreath.push(image);
    }
    HHFCS.curWreath = 0;
    HHFCS.wreathSlowDownCounter = 0;
    HHFCS.flakes = [];
    for (i = _j = 0, _ref = NFLAKES - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {
      radius = rnd(Snowflake.MAX_RADIUS);
      if (radius < Snowflake.MIN_RADIUS) {
        radius = Snowflake.MIN_RADIUS;
      }
      HHFCS.flakes[i] = new Snowflake(HHFCS.ctx, radius, "#fff", rnd(HHFCS.width), -2 * radius - rnd(1000), ms);
    }
    HHFCS.audJBLoaded = false;
    HHFCS.audJB = document.createElement("audio");
    HHFCS.audJB.onloadeddata = new function(e) {
      return HHFCS.audJBLoaded = true;
    };
    if (navigator.userAgent.indexOf("Firefox") !== -1 || navigator.userAgent.indexOf("Opera") !== -1) {
      HHFCS.audJB.src = "audio/jb.ogg";
    } else {
      HHFCS.audJB.src = "audio/jb.mp3";
    }
    HHFCS.audJBPlaying = false;
    return HHFCS.startTime = new Date().getTime();
  };

  HHFCS.draw = function() {
    var i, _i, _ref;
    if (!allResourcesLoaded()) {
      HHFCS.ctx.fillStyle = "#000";
      HHFCS.ctx.fillRect(0, 0, HHFCS.width, HHFCS.height);
      HHFCS.ctx.fillStyle = "#fff";
      HHFCS.ctx.fillText("Initializing...", HHFCS.width / 2, HHFCS.height / 2);
      return;
    }
    HHFCS.ctx.drawImage(HHFCS.imgScene, 0, 0);
    for (i = _i = 0, _ref = NFLAKES - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      HHFCS.flakes[i].draw(HHFCS.ctx);
    }
    HHFCS.ctx.drawImage(HHFCS.imgWreath[HHFCS.curWreath], 10, 395);
    HHFCS.ctx.drawImage(HHFCS.imgWreath[HHFCS.curWreath], HHFCS.width - HHFCS.imgWreath[0].width - 10, 395);
    if (++HHFCS.wreathSlowDownCounter === 5) {
      HHFCS.curWreath = (HHFCS.curWreath + 1) % HHFCS.imgWreath.length;
      HHFCS.wreathSlowDownCounter = 0;
    }
    HHFCS.ctx.globalAlpha = (new Date().getTime() - HHFCS.startTime) / DURATION;
    HHFCS.ctx.drawImage(HHFCS.imgMessage, (HHFCS.width - HHFCS.imgMessage.width) / 2, (HHFCS.height - HHFCS.imgMessage.height) / 2);
    HHFCS.ctx.globalAlpha = 1.0;
    if (!HHFCS.audJBPlaying) {
      HHFCS.audJB.play();
      return HHFCS.audJBPlaying = true;
    }
  };

  NFLAKES = 200;

  DURATION = 30000;

  allResourcesLoaded = function() {
    var i, status, _i, _ref;
    status = HHFCS.imgMessage.complete && HHFCS.imgScene.complete;
    for (i = _i = 0, _ref = HHFCS.imgWreath.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      status = status && HHFCS.imgWreath[i].complete;
    }
    return status = status && HHFCS.audJBLoaded;
  };

  rnd = function(limit) {
    return (Math.random() * limit) | 0;
  };

  return HHFCS;

})();
